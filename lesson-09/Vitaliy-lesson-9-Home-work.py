# Виталий Милентьев

#                   Функции в python
# Напишите функцию, чтобы найти максимальное из трех чисел
# Урок 9, дз №1

num1, num2, num3 = 10, 20, 5

def max_numb(int1=1, int2=2, int3=3):
    z = []
    z.append(int1)
    z.append(int2)
    z.append(int3)
    z = sorted(z)
    print(z[-1])
max_numb(num1, num2, num3)
max_numb()

# Напишите функцию, для суммирования всех чисел в списке. Не использовать встроенную функцию sum
#
# Образец списка: (8, 2, 3, 0, 7)
# Урок 9, дз №2

def sum_num(list_int=(10, 20, 30, 40)):
    z = 0
    for i in list_int:
        z = z + i
    print(f'Результат: {z}')
list1 = (8, 2, 3, 0, 7, 10, 60)
sum_num(list1)
sum_num()

# Напишите функцию, для умножения всех чисел в списке
#
# Образец списка: (8, 2, 3, -1, 7)
# Урок 9, дз №3

def multi_num(list_int_multi=(10, 20, 30, 40)):
    z = 1
    for i in list_int_multi:
        z = z * i
    print(f'Результат: {z}')
list1 = (8, 2, 3, -1, 7)
multi_num(list1)
multi_num()

# Напишите функцию, для переворота строки
#
# Пример строки: 1234abcd
#
# Результат: dcba4321
# Урок 9, дз №4

text1 = '1234abcd'
def revers(str_text='dcba4321'):
    z = []
    for i in str_text:
        z.append(i)
    x = ''
    for i in z[::-1]:
        x = x + i
    print(x)
revers(text1)

# Напишите функцию, для вычисления факториала числа (неотрицательное целое число). Функция принимает число
# в качестве аргумента
#
# 5! = 1*2*3*4*5
# Урок 9, дз №5

num1 = 5

def factorial_z(factorial_num=5):
    z = [i for i in range(1, factorial_num+1)]
    x = ''
    for i in z:
        x = f'{x} * {i}'
    x = x.lstrip(' * ')
    print(f'Результат: {eval(x)}')
factorial_z(num1)

# Напишите функцию, которая принимает строку и вычисляет количество букв верхнего и нижнего регистра
#
# Пример строки: ‘The quick Brow Fox’
#
# Результат:
#
# Кол-во символов в верхнем регистре: 3
#
# Кол-во символов в нижнем регистре: 12
# Урок 9, дз №6

text2 = 'The quick Brow Fox'

def text_sim(text1='Test'):
    z = []
    for i in text1:
        z.append(i)
    cntu = 0
    cntd = 0
    for i in z:
        if i == ' ':
            pass
        elif i.isupper():
            cntu += 1
        elif i.islower():
            cntd += 1
    print(f'Кол-во символов в верхнем регистре: {cntu}')
    print(f'Кол-во символов в нижнем регистре: {cntd}')
text_sim(text2)

# Напишите функцию, которая принимает слово и определяет является ли оно палиндромом (палиндром — Слово или фраза,
# которые одинаково читаются слева направо и справа налево.)
# Урок 9, дз №7

text2 = 'Виталий'

def palindrome_text(text1='Азиза'):
    text1 = text1.lower()
    z = []
    for i in text1:
        z.append(i)
    x = ''
    for i in z[::-1]:
        x = x + i
    print(text1 == x)
palindrome_text(text2)
palindrome_text()

# Пользователь делает вклад в размере n рублей сроком на years лет под 10% годовых. Написать функцию bank,
# принимающая количество денег и лет, и возвращающую сумму, которая будет на счете через years лет
# Урок 9, дз №8

def bank_vklad(a, b, proc=10):
    proc = proc / 100
    for i in range(b):
        a = ((a * proc) + a)
        print(f'{i+1} год: {int(a)} $')
    print(f'За {b} лет вы соберете: {int(a)} $')

bank_vklad(2500, 5)

# С помощью функции извлеките из списка числа, делимые на 15
#
# nums = [45, 55, 60, 37, 100, 105, 220]
# Урок 9, дз №9

nums = [45, 55, 60, 37, 100, 105, 220]

def chslo(list1):
    list2 = []
    for i in list1:
        if i % 15:
            pass
        else:
            list2.append(i)
    return list2

print(chslo(nums))

# Напишите функцию, которое принимает целое число и возвращает сумму цифр целого числа 108 -> 9
# Урок 9, дз №10

num1 = 108

def sum_num2(num_int):
    num_int = str(num_int)
    list2 = []
    for i in num_int:
        list2.append(int(i))
    return print(sum(list2))

sum_num2(num1)
sum_num2(20259)

# Напишите функцию, которая будет принимать количество секунд и возвращать их в днях-часах-минутах-секундах
#
# 91000 секунд = 1 день, 1 час, 16 минут, 40 секунд
# Урок 9, дз №11

num1 = 91000

def time_time(num_int):
    sek = num_int % 60, num_int // 60
    minut = sek[1] % 60, sek[1] // 60
    chas = minut[1] % 24, minut[1] // 24
    dni = chas[1] // 30
    print(f'{num_int} секунд = {dni} дней, {chas[0]} час, {minut[0]} минут, {sek[0]} секунд')

time_time(num1)
time_time(946084121)

# Создайте пакет ‘figures’, состоящий из трех подпакетов: ‘triangle’, ‘circle’, ‘square’.
#
# В каждом подпакете будем иметь файл code.py, где создадим ряд функций:
#
# – для пакета ‘circle’: функции circle_perimeter() – вычисляет длину окружности, circle_area() – вычисляет площадь
# окружности. Еще заведем переменную default_radius = 5, которая будет скрыта при импорте модуля. Ее
# назначение – дефолтный радиус для окружности, если пользователь не введет свой. Обе функции принимают на
# вход только радиус.
#
# – для пакета ‘triangle’: функции triangle_perimeter() – вычисляет периметр треугольника, triangle_area() – вычисляет
# площадь фигуры. Дополнительно создадим три переменные (длины сторон треугольника): a = 7, b = 2, c = 8, которые также
# не будут видны при импорте. На вход функциям передается длина трех сторон (если пользователь ничего не введет, то
# используются значения по умолчанию).
#
# – для пакета ‘square’: функции square_perimeter() – вычисляет периметр квадрата, square_area() – вычисляет площадь
# фигуры. Дополнительная переменная a = 15 не доступна при импорте и принимается функциями, если пользователь
# не предоставил свои размеры стороны квадрата.
#
# Ваша итоговая задача – позволить человеку, загрузившему ваш пакет, иметь возможность напрямую импортировать все
# функции из подпакетов. Например, он может написать так: ‘from figure import circle_area’.
# Урок 9, дз №12



# 10 любых задач с https://www.codewars.com/
# Урок 9, дз №13